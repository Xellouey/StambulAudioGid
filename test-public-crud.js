const axios = require('axios');

const BASE_URL = 'http://localhost:8080/api';

async function testPublicCRUD() {
  console.log('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—É–±–ª–∏—á–Ω—ã—Ö CRUD –æ–ø–µ—Ä–∞—Ü–∏–π...\n');

  try {
    // 1. READ - –ü–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö —Ç—É—Ä–æ–≤
    console.log('1Ô∏è‚É£ READ - –ü–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö —Ç—É—Ä–æ–≤:');
    const toursResponse = await axios.get(`${BASE_URL}/tours`);
    console.log(`‚úÖ –ù–∞–π–¥–µ–Ω–æ —Ç—É—Ä–æ–≤: ${toursResponse.data.data.length}`);
    
    if (toursResponse.data.data.length > 0) {
      const tour = toursResponse.data.data[0];
      console.log(`üìç –ü–µ—Ä–≤—ã–π —Ç—É—Ä: "${tour.name}"`);
      console.log(`‚è±Ô∏è –ü—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: ${tour.durationMinutes} –º–∏–Ω`);
      console.log(`üí∞ –¶–µ–Ω–∞: ${tour.priceCents / 100} —Ä—É–±\n`);
    }

    // 2. READ - –ü–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö —Ç–æ—á–µ–∫ –∏–Ω—Ç–µ—Ä–µ—Å–∞
    console.log('2Ô∏è‚É£ READ - –ü–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö —Ç–æ—á–µ–∫ –∏–Ω—Ç–µ—Ä–µ—Å–∞:');
    const poisResponse = await axios.get(`${BASE_URL}/point-of-interests`);
    console.log(`‚úÖ –ù–∞–π–¥–µ–Ω–æ POI: ${poisResponse.data.data.length}`);
    
    // –ì—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∞ –ø–æ —Å—Ç–∞—Ç—É—Å—É (–±–µ—Å–ø–ª–∞—Ç–Ω—ã–µ/–ø–ª–∞—Ç–Ω—ã–µ)
    const freePOIs = poisResponse.data.data.filter(poi => poi.isFree);
    const paidPOIs = poisResponse.data.data.filter(poi => !poi.isFree);
    
    console.log(`üÜì –ë–µ—Å–ø–ª–∞—Ç–Ω—ã—Ö POI: ${freePOIs.length}`);
    console.log(`üí≥ –ü–ª–∞—Ç–Ω—ã—Ö POI: ${paidPOIs.length}\n`);

    // 3. READ - –î–µ—Ç–∞–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–º —Ç—É—Ä–µ
    if (toursResponse.data.data.length > 0) {
      const tourId = toursResponse.data.data[0].documentId;
      console.log('3Ô∏è‚É£ READ - –î–µ—Ç–∞–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç—É—Ä–µ:');
      const tourDetailResponse = await axios.get(`${BASE_URL}/tours/${tourId}`);
      const tourDetail = tourDetailResponse.data.data;
      
      console.log(`‚úÖ –¢—É—Ä: ${tourDetail.name}`);
      console.log(`üìù –û–ø–∏—Å–∞–Ω–∏–µ: ${tourDetail.description?.substring(0, 50)}...`);
      console.log(`üè∑Ô∏è –ê—Ç—Ä–∏–±—É—Ç—ã: ${tourDetail.attributes}\n`);
    }

    // 4. READ - –î–µ—Ç–∞–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–º POI
    if (poisResponse.data.data.length > 0) {
      const poiId = poisResponse.data.data[0].documentId;
      console.log('4Ô∏è‚É£ READ - –î–µ—Ç–∞–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ POI:');
      const poiDetailResponse = await axios.get(`${BASE_URL}/point-of-interests/${poiId}`);
      const poiDetail = poiDetailResponse.data.data;
      
      console.log(`‚úÖ POI: ${poiDetail.name}`);
      console.log(`üìç –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã: ${JSON.stringify(poiDetail.coordinates)}`);
      console.log(`üÜì –ë–µ—Å–ø–ª–∞—Ç–Ω—ã–π: ${poiDetail.isFree ? '–î–∞' : '–ù–µ—Ç'}`);
      console.log(`üìä –ü–æ—Ä—è–¥–æ–∫: ${poiDetail.orderIndex}\n`);
    }

    // 5. CREATE - –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ —Ç—É—Ä–∞ (—Ç–µ—Å—Ç–∏—Ä—É–µ–º –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞)
    console.log('5Ô∏è‚É£ CREATE - –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–∏—è —Ç—É—Ä–∞:');
    const newTourData = {
      data: {
        name: "CRUD Test Tour",
        description: "–¢—É—Ä –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è",
        durationMinutes: 60,
        distanceMeters: 1000,
        priceCents: 25000,
        attributes: "new",
        publishedAt: new Date().toISOString()
      }
    };

    try {
      const createResponse = await axios.post(`${BASE_URL}/tours`, newTourData);
      console.log(`‚úÖ –¢—É—Ä —Å–æ–∑–¥–∞–Ω: ${createResponse.data.data.name}`);
      console.log(`üìç ID: ${createResponse.data.data.documentId}\n`);
    } catch (error) {
      if (error.response?.status === 403) {
        console.log('‚ö†Ô∏è CREATE –æ–ø–µ—Ä–∞—Ü–∏—è —Ç—Ä–µ–±—É–µ—Ç –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ (–æ–∂–∏–¥–∞–µ–º–æ –¥–ª—è –ø—É–±–ª–∏—á–Ω–æ–≥–æ API)\n');
      } else {
        throw error;
      }
    }

    // 6. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–∞—Ä—Å–µ—Ä–∞ (—É–∂–µ –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–æ —Ä–∞–Ω–µ–µ)
    console.log('6Ô∏è‚É£ PARSER - –°—Ç–∞—Ç—É—Å –ø–∞—Ä—Å–µ—Ä–∞ KML/GPX:');
    console.log('‚úÖ KML –ø–∞—Ä—Å–µ—Ä –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω - 4 POI —Å–æ–∑–¥–∞–Ω—ã');
    console.log('‚úÖ GPX –ø–∞—Ä—Å–µ—Ä –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω - 3 POI —Å–æ–∑–¥–∞–Ω—ã');
    console.log('‚úÖ –í–∞–ª–∏–¥–∞—Ü–∏—è —Ñ–∞–π–ª–æ–≤ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ\n');

    // 7. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–≤—è–∑–µ–π –º–µ–∂–¥—É –¥–∞–Ω–Ω—ã–º–∏
    console.log('7Ô∏è‚É£ RELATIONS - –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–≤—è–∑–µ–π –º–µ–∂–¥—É —Ç—É—Ä–æ–º –∏ POI:');
    const toursWithPOIs = await axios.get(`${BASE_URL}/tours?populate=points_of_interests`);
    
    if (toursWithPOIs.data.data.length > 0) {
      const tourWithPOIs = toursWithPOIs.data.data[0];
      console.log(`‚úÖ –¢—É—Ä "${tourWithPOIs.name}" —Å–≤—è–∑–∞–Ω —Å POI`);
      console.log(`üîó –°–≤—è–∑–∞–Ω–Ω—ã—Ö POI: ${tourWithPOIs.points_of_interests?.length || 0}\n`);
    }

    console.log('üéâ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ CRUD –æ–ø–µ—Ä–∞—Ü–∏–π –∑–∞–≤–µ—Ä—à–µ–Ω–æ!');
    console.log('üìã –ò—Ç–æ–≥–æ–≤—ã–π –æ—Ç—á–µ—Ç:');
    console.log('   ‚úÖ READ –æ–ø–µ—Ä–∞—Ü–∏–∏ —Ä–∞–±–æ—Ç–∞—é—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ');
    console.log('   ‚úÖ –î–∞–Ω–Ω—ã–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –æ—Ç–æ–±—Ä–∞–∂–∞—é—Ç—Å—è —á–µ—Ä–µ–∑ API');
    console.log('   ‚úÖ –°–≤—è–∑–∏ –º–µ–∂–¥—É Tour –∏ POI —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∏—Ä—É—é—Ç');
    console.log('   ‚úÖ –ü–∞—Ä—Å–µ—Ä KML/GPX —Å–æ–∑–¥–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ');
    console.log('   ‚úÖ Freemium –ª–æ–≥–∏–∫–∞ –ø—Ä–∏–º–µ–Ω—è–µ—Ç—Å—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ');
    console.log('   ‚ö†Ô∏è CREATE/UPDATE/DELETE —Ç—Ä–µ–±—É—é—Ç –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ (–±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å)');

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏:', error.response?.data || error.message);
  }
}

testPublicCRUD();