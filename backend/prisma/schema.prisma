// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  name      String
  password  String
  role      Role     @default(USER)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  purchases Purchase[]

  @@map("users")
}

model Tour {
  id          String     @id @default(uuid())
  title       String
  description String
  price       Float
  duration    Int        // в минутах
  difficulty  Difficulty
  category    String
  imageUrl    String?
  audioUrl    String?
  isActive    Boolean    @default(true)
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt

  pois      POI[]
  purchases Purchase[]

  @@map("tours")
}

model POI {
  id          String   @id @default(uuid())
  tourId      String
  title       String
  description String
  latitude    Float
  longitude   Float
  audioUrl    String?
  imageUrls   String[]
  order       Int
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  tour Tour @relation(fields: [tourId], references: [id], onDelete: Cascade)

  @@map("pois")
}

model Purchase {
  id            String        @id @default(uuid())
  userId        String
  tourId        String
  amount        Float
  currency      String        @default("RUB")
  status        PurchaseStatus @default(PENDING)
  paymentMethod String
  transactionId String?
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt

  user User @relation(fields: [userId], references: [id])
  tour Tour @relation(fields: [tourId], references: [id])

  @@map("purchases")
}

enum Role {
  ADMIN
  USER
}

enum Difficulty {
  EASY
  MEDIUM
  HARD
}

enum PurchaseStatus {
  PENDING
  COMPLETED
  FAILED
  REFUNDED
}