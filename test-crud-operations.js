const axios = require('axios');

const BASE_URL = 'http://localhost:8080/api';

async function testCRUDOperations() {
  console.log('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ CRUD –æ–ø–µ—Ä–∞—Ü–∏–π —á–µ—Ä–µ–∑ Strapi API...\n');

  try {
    // 1. READ - –ü–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö —Ç—É—Ä–æ–≤
    console.log('1Ô∏è‚É£ READ - –ü–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö —Ç—É—Ä–æ–≤:');
    const toursResponse = await axios.get(`${BASE_URL}/tours?populate=*`);
    console.log(`‚úÖ –ù–∞–π–¥–µ–Ω–æ —Ç—É—Ä–æ–≤: ${toursResponse.data.data.length}`);
    const tourId = toursResponse.data.data[0]?.documentId;
    console.log(`üìç ID –ø–µ—Ä–≤–æ–≥–æ —Ç—É—Ä–∞: ${tourId}\n`);

    // 2. READ - –ü–æ–ª—É—á–µ–Ω–∏–µ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —Ç—É—Ä–∞
    if (tourId) {
      console.log('2Ô∏è‚É£ READ - –ü–æ–ª—É—á–µ–Ω–∏–µ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —Ç—É—Ä–∞:');
      const tourResponse = await axios.get(`${BASE_URL}/tours/${tourId}?populate=*`);
      console.log(`‚úÖ –¢—É—Ä –Ω–∞–π–¥–µ–Ω: ${tourResponse.data.data.name}`);
      console.log(`üìä –ü—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: ${tourResponse.data.data.durationMinutes} –º–∏–Ω\n`);
    }

    // 3. READ - –ü–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö —Ç–æ—á–µ–∫ –∏–Ω—Ç–µ—Ä–µ—Å–∞
    console.log('3Ô∏è‚É£ READ - –ü–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö —Ç–æ—á–µ–∫ –∏–Ω—Ç–µ—Ä–µ—Å–∞:');
    const poisResponse = await axios.get(`${BASE_URL}/point-of-interests?populate=*`);
    console.log(`‚úÖ –ù–∞–π–¥–µ–Ω–æ POI: ${poisResponse.data.data.length}`);
    
    // –ü–æ–∫–∞–∑–∞—Ç—å –ø–µ—Ä–≤—ã–µ 3 POI
    poisResponse.data.data.slice(0, 3).forEach((poi, index) => {
      console.log(`   ${index + 1}. ${poi.name} (${poi.isFree ? '–ë–µ—Å–ø–ª–∞—Ç–Ω–æ' : '–ü–ª–∞—Ç–Ω–æ'})`);
    });
    console.log('');

    // 4. CREATE - –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ —Ç—É—Ä–∞ (—É–∂–µ –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–æ —Ä–∞–Ω–µ–µ)
    console.log('4Ô∏è‚É£ CREATE - –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ —Ç—É—Ä–∞:');
    const newTourData = {
      data: {
        name: "–¢–µ—Å—Ç–æ–≤—ã–π —Ç—É—Ä –¥–ª—è CRUD",
        description: "–¢—É—Ä –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è CRUD –æ–ø–µ—Ä–∞—Ü–∏–π",
        fullDescription: "–ü–æ–¥—Ä–æ–±–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Ç—É—Ä–∞",
        durationMinutes: 90,
        distanceMeters: 1500,
        priceCents: 30000,
        attributes: "new",
        publishedAt: new Date().toISOString()
      }
    };

    const createResponse = await axios.post(`${BASE_URL}/tours`, newTourData);
    const newTourId = createResponse.data.data.documentId;
    console.log(`‚úÖ –ù–æ–≤—ã–π —Ç—É—Ä —Å–æ–∑–¥–∞–Ω: ${createResponse.data.data.name}`);
    console.log(`üìç ID –Ω–æ–≤–æ–≥–æ —Ç—É—Ä–∞: ${newTourId}\n`);

    // 5. UPDATE - –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ç—É—Ä–∞
    console.log('5Ô∏è‚É£ UPDATE - –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ç—É—Ä–∞:');
    const updateData = {
      data: {
        name: "–û–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π —Ç–µ—Å—Ç–æ–≤—ã–π —Ç—É—Ä",
        durationMinutes: 120,
        attributes: "popular"
      }
    };

    const updateResponse = await axios.put(`${BASE_URL}/tours/${newTourId}`, updateData);
    console.log(`‚úÖ –¢—É—Ä –æ–±–Ω–æ–≤–ª–µ–Ω: ${updateResponse.data.data.name}`);
    console.log(`‚è±Ô∏è –ù–æ–≤–∞—è –ø—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: ${updateResponse.data.data.durationMinutes} –º–∏–Ω\n`);

    // 6. DELETE - –£–¥–∞–ª–µ–Ω–∏–µ —Ç—É—Ä–∞
    console.log('6Ô∏è‚É£ DELETE - –£–¥–∞–ª–µ–Ω–∏–µ —Ç—É—Ä–∞:');
    await axios.delete(`${BASE_URL}/tours/${newTourId}`);
    console.log(`‚úÖ –¢—É—Ä —É–¥–∞–ª–µ–Ω (ID: ${newTourId})\n`);

    // 7. –ü—Ä–æ–≤–µ—Ä–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è
    console.log('7Ô∏è‚É£ VERIFY DELETE - –ü—Ä–æ–≤–µ—Ä–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è:');
    try {
      await axios.get(`${BASE_URL}/tours/${newTourId}`);
      console.log('‚ùå –û—à–∏–±–∫–∞: —Ç—É—Ä –Ω–µ –±—ã–ª —É–¥–∞–ª–µ–Ω');
    } catch (error) {
      if (error.response?.status === 404) {
        console.log('‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–æ: —Ç—É—Ä —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω\n');
      } else {
        console.log('‚ùì –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —É–¥–∞–ª–µ–Ω–∏—è');
      }
    }

    // 8. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ POI CRUD
    console.log('8Ô∏è‚É£ POI CRUD - –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–π —Å —Ç–æ—á–∫–∞–º–∏ –∏–Ω—Ç–µ—Ä–µ—Å–∞:');
    
    // –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–µ—Ä–≤–æ–≥–æ POI –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    const firstPoi = poisResponse.data.data[0];
    if (firstPoi) {
      console.log(`üìç –¢–µ—Å—Ç–∏—Ä—É–µ–º POI: ${firstPoi.name}`);
      
      // UPDATE POI
      const poiUpdateData = {
        data: {
          description: "–û–±–Ω–æ–≤–ª–µ–Ω–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ —á–µ—Ä–µ–∑ CRUD —Ç–µ—Å—Ç"
        }
      };
      
      const poiUpdateResponse = await axios.put(`${BASE_URL}/point-of-interests/${firstPoi.documentId}`, poiUpdateData);
      console.log(`‚úÖ POI –æ–±–Ω–æ–≤–ª–µ–Ω: ${poiUpdateResponse.data.data.name}`);
      console.log(`üìù –ù–æ–≤–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ: ${poiUpdateResponse.data.data.description.substring(0, 50)}...\n`);
    }

    console.log('üéâ –í—Å–µ CRUD –æ–ø–µ—Ä–∞—Ü–∏–∏ —É—Å–ø–µ—à–Ω–æ –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω—ã!');
    console.log('üìã –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:');
    console.log('   ‚úÖ CREATE - –°–æ–∑–¥–∞–Ω–∏–µ –∑–∞–ø–∏—Å–µ–π —Ä–∞–±–æ—Ç–∞–µ—Ç');
    console.log('   ‚úÖ READ - –ß—Ç–µ–Ω–∏–µ –∑–∞–ø–∏—Å–µ–π —Ä–∞–±–æ—Ç–∞–µ—Ç');
    console.log('   ‚úÖ UPDATE - –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–ø–∏—Å–µ–π —Ä–∞–±–æ—Ç–∞–µ—Ç');
    console.log('   ‚úÖ DELETE - –£–¥–∞–ª–µ–Ω–∏–µ –∑–∞–ø–∏—Å–µ–π —Ä–∞–±–æ—Ç–∞–µ—Ç');
    console.log('   ‚úÖ –°–≤—è–∑–∏ –º–µ–∂–¥—É Tour –∏ POI —Ä–∞–±–æ—Ç–∞—é—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ');

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ CRUD –æ–ø–µ—Ä–∞—Ü–∏–π:', error.response?.data || error.message);
  }
}

testCRUDOperations();